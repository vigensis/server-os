#!/usr/node/bin/node
/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at http://smartos.org/CDDL
 *
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file.
 *
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 *
 * Copyright (c) 2014, Joyent, Inc. All rights reserved.
 *
 */

var assert = require('assert');
var props = require('/usr/vm/node_modules/props');

// load generated tables of data
var LOAD_DEPENDS = props.LOAD_DEPENDS;

function wantAnyFields(options, list)
{
    var want_any = false;

    assert(Array.isArray(list), 'list must be an array, is: ' + typeof (list));

    list.forEach(function (f) {
        if (want_any) {
            // don't bother checking if we've already decided
            return;
        }
        if (wantField(options, f)) {
            want_any = true;
        }
    });

    return (want_any);
}

function wantField(options, field)
{
    var want = false;

    // if no fields are specified, we want them all!
    if (!options.hasOwnProperty('fields') || options.fields.length === 0) {
        return true;
    }

    // if there *are* fields and this one's in the list, include it.
    if (options.fields.indexOf(field) !== -1) {
        return true;
    }

    /*
     * LOAD_DEPENDS looks like:
     *
     * missing: ['state']
     *
     * which means that we want field 'state' when fields includes 'missing'. So
     * when we get wantField(..., 'state') we need to look at LOAD_DEPENDS to
     * see if there are keys in the LOAD_DEPENDS object that have 'state' in
     * their list.
     */

    Object.keys(LOAD_DEPENDS).forEach(function (key) {
        if (want) {
            // already want because something depends on field
            return;
        }
        if (options.fields.indexOf(key) !== -1
            && LOAD_DEPENDS[key].indexOf(field) !== -1) {

            want = true;
        }
    });

    if (want) {
        // Something in options.fields wants 'field' as a dependency
        return true;
    }

    // we have a list, but doesn't include this field.
    return false;
}

module.exports = {
    wantAnyFields: wantAnyFields,
    wantField: wantField
};
