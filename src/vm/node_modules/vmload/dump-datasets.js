#!/usr/node/bin/node
/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at http://smartos.org/CDDL
 *
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file.
 *
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 *
 * Copyright (c) 2014, Joyent, Inc. All rights reserved.
 *
 * SUMMARY:
 *
 *  This is a test/dummy driver for the getDatasets() function. If arguments
 *  are passed on the cmdline, they are assumed to be UUIDs/zonenames and only
 *  datasets that include one of those strings will be included in the output.
 *  If no arguments are passed, all datasets will be included. Output will be
 *  an object with keys:
 *
 *  mountpoints
 *  snapshots
 *  datasets
 *
 *  which will have a key for each dataset (dataset name or in the case of
 *  mountpoints, path) and a value including the properties of that dataset.
 */

var bunyan = require('/usr/node/node_modules/bunyan');
var getDatasets = require('./vmload-datasets').getDatasets;

var log = bunyan.createLogger({
    level: 'debug',
    name: 'dump-datasets',
    streams: [
        {
            stream: process.stderr,
            level: 'debug'
        }
    ],
    serializers: bunyan.stdSerializers
});

getDatasets({}, {log: log}, function (err, results) {
    var argv;
    var _results = {};

    if (err) {
        log.error(err, 'unable to load dataset info');
        return;
    }

    if (process.argv.length >= 3) {
        argv = process.argv.slice(2);

        Object.keys(results).forEach(function (section) {
            if (!_results.hasOwnProperty(section)) {
                _results[section] = {};
            }
            Object.keys(results[section]).forEach(function (key) {
                var matched = false;

                argv.forEach(function (arg) {
                    if (matched) {
                        return;
                    }
                    if (key.match(arg)) {
                        _results[section][key] = results[section][key];
                        matched = true;
                    }
                });
            });
        });
        results = _results;
    }

    console.log(JSON.stringify(results, null, 2));
});
